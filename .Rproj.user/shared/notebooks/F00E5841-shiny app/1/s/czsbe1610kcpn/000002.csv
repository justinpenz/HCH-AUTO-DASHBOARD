"0","  ##' SERVER ###########################################"
"0","server<-function(input, output) {"
"0","    output$table <- renderTable({"
"0","      inFile <- input$SOURCE"
"0","     "
"0","     if (is.null(inFile))"
"0","      return(NULL)"
"0","    "
"0","     df <- read.xlsx(xlsx_location) %>%"
"0","        mutate(Week = gsub('Week ', '', Week)) %>%          ##make Week numeric"
"0","        separate(Week, c('Week', 'Year'), ', ') %>%         ##separate Week/Year into different columns "
"0","        mutate(Week = str_pad(Week, 2, pad = '0')) %>%       ##Pad Week so that it is always 2 digits"
"0","        mutate(Date = as.numeric(paste(1,paste(Year, Week, sep = ''), sep = ''))) %>%  ##add a day (aka u in lubridate) for each date.  it is a bug."
"0","        mutate(Date = parse_date_time(as.character(Date), orders = ""uYW"")) %>% "
"0","        mutate(Month = month(Date)) %>% "
"0","        mutate(Group = NA)"
"0","     "
"0","       })"
"0","    output$selectDrugs <- renderUI({"
"0","        drug_list = unique(df$Generic.Name)"
"0","        checkboxGroupInput('selected_drugs_list', 'Choose Drugs', drug_list)"
"0","    })"
"0","    "
"0","    selected_drugs_list = as.list(selected_drugs) "
"0","    names(selected_drugs_list) = selected_drugs"
"0","        "
"0","    for(n in names(selected_drugs_list)){"
"0","       group_name = n"
"0","       group_drugs = groups[[n]]"
"0","       df$Group = ifelse(df$Generic.Name %in% group_drugs, n, df$Group)"
"0","        }"
"0","    "
"0","    "
"0","    output$selectRange <- renderUI({"
"0","        string = paste('The Data Uploaded Contains Dates', as.character(time_range$min), as.character(time_range$max))"
"0","        p(string)"
"0","    })"
"0","    output$table2 <- renderTable({"
"0","      working_df <- df %>% filter(Date >= time_range$min & Date < time_range$max) %>%"
"0","  filter(!is.na(Group))"
"2","Error: 
"

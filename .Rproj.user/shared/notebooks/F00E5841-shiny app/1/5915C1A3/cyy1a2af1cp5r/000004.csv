"0","  ##' SERVER ###########################################"
"0","server<-function(input, output) {"
"0","    "
"0","    Dataset <- reactive({"
"0","    if (is.null(input$file)) {"
"0","      # User has not uploaded a file yet"
"0","      return(data.frame())"
"0","    }"
"0","    "
"0","    Dataset <- as.data.frame(do.call(input$readFunction,c(list(input$file$datapath),argList)))"
"0","    return(Dataset)"
"0","  })"
"0","  "
"0","  "
"0","   output$table <- renderTable({"
"0","    "
"0","    if (is.null(input$vars) || length(input$vars)==0) return(NULL)"
"0","    "
"0","    return(Dataset()[,input$vars,drop=FALSE])"
"0","  })"
"0","  "
"0","  "
"0","  "
"0","  "
"0","  "
"0","  "
"0","  "
"0","  "
"0","  "
"0","  "
"0","  "
"0","  "
"0","  "
"0","  "
"0","  "
"0","  "
"0","  "
"0","  "
"0","  "
"0","     "
"0","    output$selectDrugs <- renderUI({"
"0","        drug_list = unique(df$Generic.Name)"
"0","        checkboxGroupInput('selected_drugs_list', 'Choose Drugs', drug_list)"
"0","    })"
"0","    "
"0","    output$selectRange <- renderUI({"
"0","        string = paste('The Data Uploaded Contains Dates', as.character(time_range$min), as.character(time_range$max))"
"0","        p(string)"
"0","    })"
"0","    "
"0","    output$table2 <- renderTable({"
"0","            inFile <- input$SOURCE"
"0","           "
"0","           if (is.null(inFile))"
"0","            return(NULL)"
"0","           "
"0","           xlsx_location = "
"0","          "
"0","           df <- read.xlsx(xlsx_location) %>%"
"0","              mutate(Week = gsub('Week ', '', Week)) %>%          ##make Week numeric"
"0","              separate(Week, c('Week', 'Year'), ', ') %>%         ##separate Week/Year into different columns "
"0","              mutate(Week = str_pad(Week, 2, pad = '0')) %>%       ##Pad Week so that it is always 2 digits"
"0","              mutate(Date = as.numeric(paste(1,paste(Year, Week, sep = ''), sep = ''))) %>%  ##add a day (aka u in lubridate) for each date.  it is a bug."
"0","              mutate(Date = parse_date_time(as.character(Date), orders = ""uYW"")) %>% "
"0","              mutate(Month = month(Date)) %>% "
"0","              mutate(Group = NA)"
"0","                        "
"0","            selected_drugs_list = input$selected_drugs_list "
"0","            names(selected_drugs_list) = input$selected_drugs_list"
"0","                "
"0","            for(n in names(selected_drugs_list)){"
"0","               group_name = n"
"0","               group_drugs = groups[[n]]"
"0","               df$Group = ifelse(df$Generic.Name %in% group_drugs, n, df$Group)"
"0","                }"
"0","      "
"0","      "
"0","            "
"0","            daterange0 <- as.list(unlist(strsplit(as.character(input$dateRange0), 'to')))"
"0","      "
"0","            names(daterange0) <- c('min', 'max')"
"0","            "
"0","            daterange1 <- as.list(unlist(strsplit(as.character(input$dateRange1), 'to')))"
"0","            names(daterange1) <- c('min', 'max')"
"0","            "
"0","            "
"0","            daterange2 <- as.list(unlist(strsplit(as.character(input$dateRange2), 'to')))"
"0","            names(daterange2) <- c('min', 'max')"
"0","            "
"0","        "
"0","            working_df <- df %>% filter(Date >= daterange0$min & Date < daterange0$max) %>%"
"0","                filter(!is.na(Group))"
"0","        "
"0","            totals_by_month <- working_df %>% group_by(Group, Month) %>% summarize(sum = sum(Total.Spend, na.rm = T))"
"0","        "
"0","            Timeframe_1_totals <- working_df %>% "
"0","                filter(Date >= daterange1$min & Date < daterange1$max) %>% "
"0","                group_by(Group) %>% "
"0","                summarize(Total_Timeframe_1 = sum(Total.Spend))"
"0","            "
"0","            Timeframe_2_totals <- working_df %>% "
"0","                filter(Date >= daterange2$min & Date < daterange2$max) %>% "
"0","                group_by(Group) %>% "
"0","                summarize(Total_Timeframe_2 = sum(Total.Spend))"
"0","            "
"0","            table <- full_join(totals_by_month, Timeframe_1_totals, by = ""Group"") %>% "
"0","              full_join(Timeframe_2_totals, by ='Group') "
"0","            table"
"0","            "
"0","  })"
"0","}"
